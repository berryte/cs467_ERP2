{
	"info": {
		"_postman_id": "d14d393f-7850-4249-88c9-39a4036cad2e",
		"name": "erp_api",
		"description": "Test the API for the ERP Web Application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"item": [
				{
					"name": "Login James Smith",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7e7d546-c8dc-4a17-9111-a159953fcdee",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"james.smith@acme.com\",\n\t\"password\": \"James\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Robert Johnson",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"robert.johnson@acme.com\",\n\t\"password\": \"Robert\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login John Williams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"john.williams@acme.com\",\n\t\"password\": \"John\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Michael Jones",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"michael.jones@acme.com\",\n\t\"password\": \"Michael\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Mary Davis",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"mary.davis@acme.com\",\n\t\"password\": \"Mary\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Patricia Miller",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"patricia.miller@acme.com\",\n\t\"password\": \"Patricia\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Jennifer Wilson",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"jennifer.wilson@acme.com\",\n\t\"password\": \"Jennifer\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Linda Moore",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"linda.moore@acme.com\",\n\t\"password\": \"Linda\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme.com\",\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Non-registered User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Incorrect email and/or password');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"stan.smith@acme.com\",\n\t\"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Registered User w/ Wrong Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Incorrect email and/or password');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme.com\",\n\t\"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email longer than 256",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email length error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" length must be less than or equal to 256 characters long');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadmin@acme.com\",\n\t\"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email one domain segment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a valid email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme\",\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email Invalid Domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a valid email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme.net\",\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email without at sign",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a valid email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"acme.net\",\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email Script Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a valid email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"<script src='abc.com'></script>\",\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email Empty String",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" is not allowed to be empty');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"\",\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email is a number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": 2,\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email is a boolean",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": true,\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email is missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" is required');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Not sent as JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Not json error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Request must be application/json');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"password\": \"admin\""
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Password Incorrect",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Message Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Incorrect email and/or password');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"linda.moore@acme.com\",\n\t\"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password is a number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"password error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"password\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme.com\",\n\t\"password\": 1\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password is a boolean",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"password error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"password\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme.com\",\n\t\"password\": true\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password Empty String",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"password error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"password\" is not allowed to be empty');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"linda.moore@acme.com\",\n\t\"password\": \"\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password is missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"password error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"password\" is required');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme.com\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Extra Value",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"extra value error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"script\" is not allowed');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme.com\",\n\t\"password\": \"admin\",\n\t\"script\": \"<script src='hello.com'></script>\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "session",
			"item": [
				{
					"name": "Session Good admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97ede942-9c55-48ed-a158-fc3ecca6987e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/admin",
							"host": [
								"{{domain}}"
							],
							"path": [
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Session Good admin-account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97ede942-9c55-48ed-a158-fc3ecca6987e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/admin-account",
							"host": [
								"{{domain}}"
							],
							"path": [
								"admin-account"
							]
						}
					},
					"response": []
				},
				{
					"name": "Session Good admin-reports",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97ede942-9c55-48ed-a158-fc3ecca6987e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/admin-reports",
							"host": [
								"{{domain}}"
							],
							"path": [
								"admin-reports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Session Good admin-usermanagement",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97ede942-9c55-48ed-a158-fc3ecca6987e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/admin-usermanagement",
							"host": [
								"{{domain}}"
							],
							"path": [
								"admin-usermanagement"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Non-Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7e7d546-c8dc-4a17-9111-a159953fcdee",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"james.smith@acme.com\",\n\t\"password\": \"James\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Session Good home",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97ede942-9c55-48ed-a158-fc3ecca6987e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/home",
							"host": [
								"{{domain}}"
							],
							"path": [
								"home"
							]
						}
					},
					"response": []
				},
				{
					"name": "Session Good create-awards",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97ede942-9c55-48ed-a158-fc3ecca6987e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/award",
							"host": [
								"{{domain}}"
							],
							"path": [
								"award"
							]
						}
					},
					"response": []
				},
				{
					"name": "Session Good history",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97ede942-9c55-48ed-a158-fc3ecca6987e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/history",
							"host": [
								"{{domain}}"
							],
							"path": [
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Session Good account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97ede942-9c55-48ed-a158-fc3ecca6987e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/account",
							"host": [
								"{{domain}}"
							],
							"path": [
								"account"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "Create User As Non-Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('Invalid User');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"corey.immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2fff139f-2e22-47bb-baaa-8deb6877681a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme.com\",\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Email longer than 256",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email length error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" length must be less than or equal to 256 characters long');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadmin@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Email one domain segment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a valid email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"corey.immke@acme\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Email Invalid Domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a valid email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"corey.immke@acme.org\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Email without at sign",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a valid email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"acme.org\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Email Script Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a valid email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"<script src='abc.com'></script>\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Email Empty String",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email length error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" is not allowed to be empty');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Email is a number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": 4,\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Email is a boolean",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": true,\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Email is missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"email error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"email\" is required');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Password Empty String",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"password error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"password\" is not allowed to be empty');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Password is a number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"password error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"password\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": 2,\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Password is a boolean",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"password error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"password\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": true,\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Password is missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"password error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"password\" is required');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Name Longer than 255",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"name error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"name\" length must be less than or equal to 255 characters long');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immkeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Name is a number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"name error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"name\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": 82,\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Name is a boolean",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"name error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"name\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": false,\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Name is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"name error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"name\" must be a string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": null,\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Name is missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"name error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"name\" is required');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User is_admin negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"is_admin error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"is_admin\" must be larger than or equal to 0');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": -1,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User is_admin greater than 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"is_admin error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"is_admin\" must be less than or equal to 1');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 2,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User is_admin is a float",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"is_admin error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"is_admin\" must be an integer');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0.4,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User is_admin is a boolean",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"is_admin error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"is_admin\" must be a number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": true,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User is_admin is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"is_admin error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"is_admin\" must be a number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": null,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User is_admin is missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"is_admin error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"is_admin\" is required');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User region_id negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"region_id error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"region_id\" must be a positive number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": -1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User department_id negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"department_id error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"department_id\" must be a positive number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": -2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User region_id is a float",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"region_id error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"region_id\" must be an integer');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1.5,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User region_id is a boolean",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"region_id error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"region_id\" must be a number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": false,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User region_id is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"region_id error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"region_id\" must be a number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": null,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User department_id is a float",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"department_id error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"department_id\" must be an integer');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2.6\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User department_id is a boolean",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"department_id error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"department_id\" must be a number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": true\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User department_id is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"department_id error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"department_id\" must be a number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": null\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Extra Parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"extra parameter error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('\"script\" is not allowed');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2,\n\t\"script\": \"<script src='hello.com'></script>\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"verify email\", function () {",
									"    pm.expect(jsonData.email).to.eql('immke@acme.com');",
									"});",
									"",
									"pm.test(\"verify name\", function () {",
									"    pm.expect(jsonData.name).to.eql('Corey Immke');",
									"});",
									"",
									"pm.test(\"Responds with an id\", function () {",
									"    pm.response.to.have.jsonBody(\"id\");",
									"});",
									"",
									"pm.test(\"Responds with a created_on\", function () {",
									"    pm.response.to.have.jsonBody(\"created_on\");",
									"});",
									"",
									"pm.globals.set(\"user_id\", jsonData.id);",
									"pm.globals.set(\"created_on\", jsonData.created_on);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Same User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"verify message\", function () {",
									"    pm.expect(jsonData.message).to.eql('Account already exists');",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\",\n\t\"name\": \"Corey Immke\",\n\t\"is_admin\": 0,\n\t\"region_id\": 1,\n\t\"department_id\": 2\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Created User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7e7d546-c8dc-4a17-9111-a159953fcdee",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"immke@acme.com\",\n\t\"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac309834-4ac0-468a-83fa-5a13a6c8c543",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"jsonData.forEach(function(element) {",
									"    pm.test(\"Responds with an id\", function () {",
									"        pm.expect(element).to.have.property(\"id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with an email\", function () {",
									"        pm.expect(element).to.have.property(\"email\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a name\", function () {",
									"        pm.expect(element).to.have.property(\"name\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a created_on\", function () {",
									"        pm.expect(element).to.have.property(\"created_on\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a is_admin\", function () {",
									"        pm.expect(element).to.have.property(\"is_admin\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a region_id\", function () {",
									"        pm.expect(element).to.have.property(\"region_id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a department_id\", function () {",
									"        pm.expect(element).to.have.property(\"department_id\");",
									"    });",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Admin Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac309834-4ac0-468a-83fa-5a13a6c8c543",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"jsonData.forEach(function(element) {",
									"    pm.test(\"Responds with an id\", function () {",
									"        pm.expect(element).to.have.property(\"id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with an email\", function () {",
									"        pm.expect(element).to.have.property(\"email\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a name\", function () {",
									"        pm.expect(element).to.have.property(\"name\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a created_on\", function () {",
									"        pm.expect(element).to.have.property(\"created_on\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a is_admin\", function () {",
									"        pm.expect(element).to.have.property(\"is_admin\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a region_id\", function () {",
									"        pm.expect(element).to.have.property(\"region_id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a department_id\", function () {",
									"        pm.expect(element).to.have.property(\"department_id\");",
									"    });",
									"    ",
									"    pm.test(\"is_admin equals 1\", function () {",
									"        pm.expect(element.is_admin).to.eql(1);",
									"    });",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/api/users?is_admin=1",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "is_admin",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Non-Admin Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac309834-4ac0-468a-83fa-5a13a6c8c543",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"jsonData.forEach(function(element) {",
									"    pm.test(\"Responds with an id\", function () {",
									"        pm.expect(element).to.have.property(\"id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with an email\", function () {",
									"        pm.expect(element).to.have.property(\"email\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a name\", function () {",
									"        pm.expect(element).to.have.property(\"name\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a created_on\", function () {",
									"        pm.expect(element).to.have.property(\"created_on\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a is_admin\", function () {",
									"        pm.expect(element).to.have.property(\"is_admin\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a region_id\", function () {",
									"        pm.expect(element).to.have.property(\"region_id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a department_id\", function () {",
									"        pm.expect(element).to.have.property(\"department_id\");",
									"    });",
									"    ",
									"    pm.test(\"is_admin equals 0\", function () {",
									"        pm.expect(element.is_admin).to.eql(0);",
									"    });",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/api/users?is_admin=0",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "is_admin",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users region 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac309834-4ac0-468a-83fa-5a13a6c8c543",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"jsonData.forEach(function(element) {",
									"    pm.test(\"Responds with an id\", function () {",
									"        pm.expect(element).to.have.property(\"id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with an email\", function () {",
									"        pm.expect(element).to.have.property(\"email\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a name\", function () {",
									"        pm.expect(element).to.have.property(\"name\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a created_on\", function () {",
									"        pm.expect(element).to.have.property(\"created_on\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a is_admin\", function () {",
									"        pm.expect(element).to.have.property(\"is_admin\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a region_id\", function () {",
									"        pm.expect(element).to.have.property(\"region_id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a department_id\", function () {",
									"        pm.expect(element).to.have.property(\"department_id\");",
									"    });",
									"    ",
									"    pm.test(\"region_id equals 1\", function () {",
									"        pm.expect(element.region_id).to.eql(1);",
									"    });",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/api/users?region_id=1",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "region_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users department 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac309834-4ac0-468a-83fa-5a13a6c8c543",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"jsonData.forEach(function(element) {",
									"    pm.test(\"Responds with an id\", function () {",
									"        pm.expect(element).to.have.property(\"id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with an email\", function () {",
									"        pm.expect(element).to.have.property(\"email\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a name\", function () {",
									"        pm.expect(element).to.have.property(\"name\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a created_on\", function () {",
									"        pm.expect(element).to.have.property(\"created_on\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a is_admin\", function () {",
									"        pm.expect(element).to.have.property(\"is_admin\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a region_id\", function () {",
									"        pm.expect(element).to.have.property(\"region_id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a department_id\", function () {",
									"        pm.expect(element).to.have.property(\"department_id\");",
									"    });",
									"    ",
									"    pm.test(\"department_id equals 2\", function () {",
									"        pm.expect(element.department_id).to.eql(2);",
									"    });",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/api/users?department_id=2",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "department_id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users region 1 department 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac309834-4ac0-468a-83fa-5a13a6c8c543",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"jsonData.forEach(function(element) {",
									"    pm.test(\"Responds with an id\", function () {",
									"        pm.expect(element).to.have.property(\"id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with an email\", function () {",
									"        pm.expect(element).to.have.property(\"email\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a name\", function () {",
									"        pm.expect(element).to.have.property(\"name\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a created_on\", function () {",
									"        pm.expect(element).to.have.property(\"created_on\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a is_admin\", function () {",
									"        pm.expect(element).to.have.property(\"is_admin\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a region_id\", function () {",
									"        pm.expect(element).to.have.property(\"region_id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a department_id\", function () {",
									"        pm.expect(element).to.have.property(\"department_id\");",
									"    });",
									"    ",
									"    pm.test(\"region_id equals 1\", function () {",
									"        pm.expect(element.region_id).to.eql(1);",
									"    });",
									"    ",
									"    pm.test(\"department_id equals 4\", function () {",
									"        pm.expect(element.department_id).to.eql(4);",
									"    });",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/api/users?department_id=4&region_id=1",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "department_id",
									"value": "4"
								},
								{
									"key": "region_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Non-Admin Users region 1 department 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac309834-4ac0-468a-83fa-5a13a6c8c543",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"jsonData.forEach(function(element) {",
									"    pm.test(\"Responds with an id\", function () {",
									"        pm.expect(element).to.have.property(\"id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with an email\", function () {",
									"        pm.expect(element).to.have.property(\"email\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a name\", function () {",
									"        pm.expect(element).to.have.property(\"name\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a created_on\", function () {",
									"        pm.expect(element).to.have.property(\"created_on\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a is_admin\", function () {",
									"        pm.expect(element).to.have.property(\"is_admin\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a region_id\", function () {",
									"        pm.expect(element).to.have.property(\"region_id\");",
									"    });",
									"    ",
									"    pm.test(\"Responds with a department_id\", function () {",
									"        pm.expect(element).to.have.property(\"department_id\");",
									"    });",
									"    ",
									"    pm.test(\"region_id equals 1\", function () {",
									"        pm.expect(element.region_id).to.eql(1);",
									"    });",
									"    ",
									"    pm.test(\"department_id equals 4\", function () {",
									"        pm.expect(element.department_id).to.eql(4);",
									"    });",
									"    ",
									"    pm.test(\"is_admin equals 0\", function () {",
									"        pm.expect(element.is_admin).to.eql(0);",
									"    });",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/api/users?department_id=4&region_id=1&is_admin=0",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "department_id",
									"value": "4"
								},
								{
									"key": "region_id",
									"value": "1"
								},
								{
									"key": "is_admin",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Previously Created User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac309834-4ac0-468a-83fa-5a13a6c8c543",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"id value\", function () {",
									"    pm.expect(jsonData.id).to.eql(pm.globals.get(\"user_id\"));",
									"});",
									"",
									"pm.test(\"email value\", function () {",
									"    pm.expect(jsonData.email).to.eql('immke@acme.com');",
									"});",
									"",
									"pm.test(\"name value\", function () {",
									"    pm.expect(jsonData.name).to.eql('Corey Immke');",
									"});",
									"",
									"pm.test(\"email value\", function () {",
									"    pm.expect(jsonData.email).to.eql('immke@acme.com');",
									"});",
									"",
									"pm.test(\"created_on value\", function () {",
									"    pm.expect(jsonData.created_on).to.eql(pm.globals.get(\"created_on\"));",
									"});",
									"",
									"pm.test(\"is_admin value\", function () {",
									"    pm.expect(jsonData.is_admin).to.eql(0);",
									"});",
									"",
									"pm.test(\"region_id value\", function () {",
									"    pm.expect(jsonData.region_id).to.eql(1);",
									"});",
									"",
									"pm.test(\"department_id value\", function () {",
									"    pm.expect(jsonData.department_id).to.eql(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/api/users/{{user_id}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"verify email\", function () {",
									"    pm.expect(jsonData.email).to.eql('immke@acme.com');",
									"});",
									"",
									"pm.test(\"verify name\", function () {",
									"    pm.expect(jsonData.name).to.eql('Cody Immke');",
									"});",
									"",
									"pm.test(\"Responds with an id\", function () {",
									"    pm.response.to.have.jsonBody(\"id\");",
									"});",
									"",
									"pm.test(\"Responds with a created_on\", function () {",
									"    pm.response.to.have.jsonBody(\"created_on\");",
									"});",
									"",
									"pm.globals.set(\"user_id\", jsonData.id);",
									"pm.globals.set(\"created_on\", jsonData.created_on);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Cody Immke\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/users/{{user_id}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User Non Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{domain}}/api/users/{{user_id}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3679aca-e92e-4bd6-9b38-139ca36b45e2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set-Cookie is present\", function () {",
									"    pm.response.to.have.header(\"Set-Cookie\");",
									"});",
									"",
									"pm.test(\"Check cookie name\", function () {",
									"    pm.cookies.has(\"erp_session\")",
									"});",
									"",
									"pm.test(\"is_admin Check\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.is_admin).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2fff139f-2e22-47bb-baaa-8deb6877681a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"admin@acme.com\",\n\t\"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{domain}}/api/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{domain}}/api/users/{{user_id}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify User Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Empty Object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{domain}}/api/users/{{user_id}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User Sig",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"verify email\", function () {",
									"    pm.expect(jsonData.email).to.eql('immkec@acme.com');",
									"});",
									"",
									"pm.test(\"verify name\", function () {",
									"    pm.expect(jsonData.name).to.eql('Corey Immke');",
									"});",
									"",
									"pm.test(\"Responds with an id\", function () {",
									"    pm.response.to.have.jsonBody(\"id\");",
									"});",
									"",
									"pm.test(\"Responds with a created_on\", function () {",
									"    pm.response.to.have.jsonBody(\"created_on\");",
									"});",
									"",
									"pm.globals.set(\"user_id\", jsonData.id);",
									"pm.globals.set(\"created_on\", jsonData.created_on);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "immkec@acme.com",
									"type": "text"
								},
								{
									"key": "name",
									"value": "Corey Immke",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								},
								{
									"key": "is_admin",
									"value": "0",
									"type": "text"
								},
								{
									"key": "signature",
									"type": "file",
									"src": "/home/corey/Documents/OSU/467/cs467_ERP2/src/public/latexfiles/background1.jpg"
								}
							]
						},
						"url": {
							"raw": "{{domain}}/api/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8629d394-26e0-476b-be1a-e0134a27ba29",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{domain}}/api/users/{{user_id}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}